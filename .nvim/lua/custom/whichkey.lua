local M = {
	"folke/which-key.nvim",
	event = "VeryLazy",
}

M.config = function()
	local setup = {
		preset = "modern",
	}

	local mappings = {
		{
			mode = "n",
			"<leader>,",
			"<cmd>BookmarkToggle<CR>",
			desc = "Bookmark Toggle",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>a",
			"<cmd>BookmarkShowAll<CR>",
			desc = "Bookmark Show All",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>j",
			"<cmd>BookmarkNext<CR>",
			desc = "Bookmark Next",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>k",
			"<cmd>BookmarkPrev<CR>",
			desc = "Bookmark Prev",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>x",
			"<cmd>BookmarkClearAll<CR>",
			desc = "Bookmark Clear All",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>1",
			"1gt",
			desc = "Tab 1",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>2",
			"2gt",
			desc = "Tab 2",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>3",
			"3gt",
			desc = "Tab 3",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>4",
			"4gt",
			desc = "Tab 4",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>5",
			"5gt",
			desc = "Tab 5",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>6",
			"6gt",
			desc = "Tab 6",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>7",
			"7gt",
			desc = "Tab 7",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>8",
			"8gt",
			desc = "Tab 8",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>9",
			"9gt",
			desc = "Tab 9",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>e",
			"<cmd>NvimTreeToggle<CR>",
			desc = "Explorer",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>w",
			"<cmd>w!<CR>",
			desc = "Save",
			nowait = false,
		},
		{
			mode = "n",
			"<leader>q",
			"<C-w>o:q!<CR>",
			desc = "Close Buffer",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>Q",
			"<cmd>q!<CR>",
			desc = "Quit",
			nowait = true,
		},
		{
			mode = "n",
			"<leader><CR>",
			"<cmd>nohlsearch<CR>",
			desc = "No Highlight",
			nowait = true,
		},

		{
			mode = "n",
			"<leader>g",
			group = "Git",
			nowait = false,
		},
		{
			mode = "n",
			"<leader>gg",
			"<cmd>FloatermNew lazygit<CR>",
			desc = "Lazygit",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gj",
			"<cmd>lua require 'gitsigns'.next_hunk()<CR>",
			desc = "Next Hunk",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gk",
			"<cmd>lua require 'gitsigns'.prev_hunk()<CR>",
			desc = "Prev Hunk",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gl",
			"<cmd>lua require 'gitsigns'.blame_line()<CR>",
			desc = "Blame",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gu",
			"<cmd>silent !gh auth switch && gh auth setup-git && tmux refresh-client -S<cr>",
			desc = "gh switch user",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gd",
			"<cmd>Gitsigns diffthis HEAD<CR>",
			desc = "Diff",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gD",
			"<cmd>wincmd p | q<CR>",
			desc = "Go back to original window",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gb",
			"<cmd>lua Git_backup()<CR>",
			desc = "Backup",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>gs",
			"<cmd>lua Git_force_sync()<CR>",
			desc = "Force Sync",
			nowait = true,
		},

		{
			mode = "n",
			"<leader>f",
			group = "Telescope Find",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>ff",
			"<cmd>Telescope find_files<CR>",
			desc = "Find Files",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>fe",
			"<cmd>Telescope emoji<CR>",
			desc = "Find Emoji",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>fg",
			"<cmd>Telescope live_grep<CR>",
			desc = "Find Grep",
			nowait = true,
		},

		{
			mode = "n",
			"<leader>l",
			group = "LSP",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>la",
			"<cmd>lua vim.lsp.buf.code_action()<CR>",
			desc = "Code Action",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>lI",
			"<cmd>LspInstallInfo<CR>",
			desc = "Installer Info",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>li",
			"<cmd>LspInfo<CR>",
			desc = "Lsp Info",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>lr",
			"<cmd>LspRestart<CR>",
			desc = "Restart Lsp Server",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>M",
			"<cmd>Mason<CR>",
			desc = "Mason",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>s",
			group = "Search",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>ss",
			"<cmd>lua require('spectre').open()<CR>",
			desc = "Search",
			nowait = true,
		},

		{
			mode = "n",
			"<leader>t",
			group = "Test",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>to",
			"<cmd>TestNearest<CR>",
			desc = "Nearest",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>tw",
			"<cmd>silent !tmux split-window -h<CR><cmd>silent !tmux send-keys 'yarn test:watch <C-r>%' C-m;<CR><cmd>silent !tmux select-pane -t 0<CR>",
			desc = "Nearest watch",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>tr",
			"<cmd>lua require 'rest-nvim'.run()<CR>",
			desc = "Run REST-API",
			nowait = true,
		},

		{
			mode = "n",
			"<leader>T",
			group = "Terminal",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>Tf",
			"<cmd>ToggleTerm direction=float<CR>",
			desc = "Float",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>Th",
			"<cmd>ToggleTerm size=10 direction=horizontal<CR>",
			desc = "Horizontal",
			nowait = true,
		},
		{
			mode = "n",
			"<leader>Tv",
			"<cmd>ToggleTerm size=80 direction=vertical<CR>",
			desc = "Vertical",
			nowait = true,
		},
		{
			mode = "v",
			"<leader>f",
			group = "Telescope Find",
			nowait = true,
		},
		{
			mode = "v",
			"<leader>fg",
			"y<ESC><cmd>Telescope grep_string<CR>",
			desc = "Find Grep",
			nowait = true,
		},
		{
			mode = "v",
			"<leader>s",
			group = "Search",
			nowait = true,
		},
		{
			mode = "v",
			"<leader>ss",
			"<cmd>lua require('spectre').open_visual({select_word=true})<CR>",
			desc = "Search",
			nowait = true,
		},
	}

	local which_key = require("which-key")

	which_key.add(mappings)
	which_key.setup(setup)
end

return M
